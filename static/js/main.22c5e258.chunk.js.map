{"version":3,"sources":["context/seed.js","context/DBContext.js","pages/AddBudget/AddBudget.js","pages/AddTransaction/AddTransaction.js","utils/commafy.js","pages/Budget/Budget.js","pages/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["seedData","_id","cash","budgets","savings","DBContext","React","createContext","db","PouchDB","AddBudget","_ref","history","_useContext","useContext","data","updateData","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","amount","setAmount","_useState5","_useState6","frequency","setFrequency","handleSubmit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","err","newBudgets","wrap","_context","prev","next","length","push","find","budget","toLowerCase","concat","window","alert","join","toConsumableArray","uuid","createdAt","Date","toJSON","transactions","stop","apply","this","arguments","react_default","createElement","className","style","flex","htmlFor","type","autoFocus","value","onChange","e","target","onClick","checked","justifyContent","AddTranscation","location","_useContext$data","isCash","state","transaction","isBudget","setType","budgetId","setBudgetId","_useState7","_useState8","note","setNote","useEffect","newCash","abrupt","map","objectSpread","event","key","commafy","num","undefined","str","toString","split","replace","Budget","match","found","setFound","_useState9","_useState10","setTransactions","selectedBudget","params","id","reduce","transactionsMap","formattedDate","format","handleDelete","_ref3","_callee2","_context2","confirm","filter","handleDeleteTransaction","_ref4","_callee3","_context3","t","_x","keys","sort","b","date","width","marginBottom","colSpan","fontSize","textAlign","padding","marginTop","Dashboard","totalCash","extraBudget","expenditures","useMemo","daysInMonth","getDaysInMonth","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","Fragment","react_router_dom","to","pathname","classnames","positive","negative","textDecoration","newSavings","prompt","float","marginLeft","App","react_router","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","children","setData","setTotalCash","setExtraBudget","fetchAllData","_fetchAllData","dbData","_dbData","get","sent","t0","put","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","now","extra","differenceInDays","differenceInMonths","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","changes","Provider","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.22c5e258.chunk.js","sourcesContent":["export const seedData = {\n  _id: 'data',\n  cash: [],\n  budgets: [],\n  savings: 0\n};\n","import { differenceInDays, differenceInMonths } from 'date-fns';\nimport PouchDB from 'pouchdb';\nimport React, { useEffect, useState } from 'react';\nimport { seedData } from './seed';\n\nconst DBContext = React.createContext({});\n\nconst db = new PouchDB('tesya-db');\n\nexport const DBProvider = ({ children }) => {\n  const [data, setData] = useState({});\n  const [totalCash, setTotalCash] = useState(0);\n  const [extraBudget, setExtraBudget] = useState({});\n\n  async function fetchAllData() {\n    try {\n      const dbData = await db.get('data');\n      setData(dbData);\n    } catch {\n      await db.put(seedData);\n      const dbData = await db.get('data');\n      setData(dbData);\n    }\n  }\n\n  useEffect(() => {\n    if (!Object.keys(data).length) return;\n    let totalCash = 0;\n    for (const { amount } of data.cash) {\n      totalCash += amount;\n    }\n\n    const extraBudget = {};\n    for (const budget of data.budgets) {\n      const now = new Date();\n\n      const multiplier =\n        budget.frequency === 'D' ? differenceInDays : differenceInMonths;\n\n      let extra =\n        (multiplier(now, new Date(budget.createdAt)) + 1) * budget.amount;\n\n      for (const transaction of budget.transactions) {\n        totalCash -= transaction.amount;\n        extra -= transaction.amount;\n      }\n      extraBudget[budget._id] = extra;\n    }\n\n    setExtraBudget(extraBudget);\n    setTotalCash(totalCash);\n  }, [data]);\n\n  const updateData = async changes => {\n    await db.put({\n      ...data,\n      ...changes,\n    });\n    return fetchAllData();\n  };\n\n  useEffect(() => {\n    fetchAllData();\n  }, []);\n\n  return (\n    <DBContext.Provider\n      value={{\n        data,\n        totalCash,\n        setTotalCash,\n        db,\n        updateData,\n        extraBudget,\n      }}\n    >\n      {children}\n    </DBContext.Provider>\n  );\n};\n\nexport default DBContext;\n","import React, { useContext, useState } from 'react';\nimport uuid from 'uuid/v1';\nimport DBContext from '../../context/DBContext';\nimport './AddBudget.scss';\n\nconst AddBudget = ({ history }) => {\n  const {\n    data: { budgets },\n    updateData,\n  } = useContext(DBContext);\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [frequency, setFrequency] = useState('D');\n\n  const handleSubmit = async () => {\n    const err = [];\n    if (name.length === 0) err.push('Must have a name.');\n    const sameBudgetName = budgets.find(\n      budget => budget.name.toLowerCase() === name.toLowerCase()\n    );\n    if (sameBudgetName) err.push(`${name} is already taken.`);\n\n    if (+amount <= 0) err.push('Budget must be a postive number.');\n\n    if (!!err.length) {\n      window.alert(err.join('\\n'));\n    } else {\n      const newBudgets = [\n        ...budgets,\n        {\n          _id: uuid(),\n          name,\n          amount: +amount,\n          frequency,\n          createdAt: new Date().toJSON(),\n          transactions: [],\n        },\n      ];\n      await updateData({ budgets: newBudgets });\n      history.push('/dashboard');\n    }\n  };\n\n  return (\n    <section className=\"add-budget\">\n      <div style={{ flex: 1 }}>\n        <h2>Add Budget</h2>\n        <form>\n          <div className=\"form-item\">\n            <label htmlFor=\"budget-name\">Name:</label>\n            <input\n              type=\"text\"\n              name=\"budget-name\"\n              autoFocus\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-item\">\n            <label htmlFor=\"budget-amount\">Budget:</label>\n            <input\n              type=\"number\"\n              name=\"budget-amount\"\n              value={amount}\n              onChange={e => setAmount(e.target.value)}\n            />\n          </div>\n          <div className=\"form-item\">\n            <label htmlFor=\"budget-frequency\">Frequency:</label>\n            <div\n              className=\"radio-container\"\n              onClick={() => {\n                setFrequency('D');\n              }}\n            >\n              <input\n                type=\"radio\"\n                name=\"budget-frequency\"\n                value=\"D\"\n                checked={frequency === 'D'}\n                onChange={e => setFrequency(e.target.value)}\n              />\n              Day\n            </div>\n            <div\n              className=\"radio-container\"\n              onClick={() => {\n                setFrequency('M');\n              }}\n            >\n              <input\n                type=\"radio\"\n                name=\"budget-frequency\"\n                value=\"M\"\n                checked={frequency === 'M'}\n                onChange={e => setFrequency(e.target.value)}\n              />\n              Month\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"row\" style={{ justifyContent: 'space-between' }}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            history.push('/dashboard');\n          }}\n        >\n          Cancel\n        </button>\n        <button type=\"button\" onClick={handleSubmit}>\n          Add\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default AddBudget;\n","import React, { useContext, useEffect, useState } from 'react';\nimport uuid from 'uuid/v1';\nimport DBContext from '../../context/DBContext';\nimport './AddTransaction.scss';\n\nconst AddTranscation = ({ history, location }) => {\n  const {\n    data: { budgets, cash },\n    updateData,\n  } = useContext(DBContext);\n\n  const isCash = location.state && location.state.transaction === 'cash';\n  const isBudget =\n    location.state &&\n    location.state.transaction &&\n    location.state.transaction !== 'cash';\n\n  const [type, setType] = useState(isCash ? 'cash' : 'budget');\n  const [budgetId, setBudgetId] = useState(\n    isBudget ? location.state.transaction : ''\n  );\n  const [amount, setAmount] = useState('');\n  const [note, setNote] = useState('');\n\n  useEffect(() => {\n    if (budgets && !!budgets.length && !isBudget) {\n      setBudgetId(budgets[0]._id);\n    }\n  }, [budgets, isBudget]);\n\n  const handleSubmit = async () => {\n    const err = [];\n\n    if (type === 'cash') {\n      const newCash = [\n        ...cash,\n        {\n          _id: uuid(),\n          amount: +amount,\n          createdAt: new Date().toJSON(),\n        },\n      ];\n      await updateData({ cash: newCash });\n      history.push('/dashboard');\n      return;\n    }\n\n    if (+amount <= 0) err.push('Budget must be a postive number.');\n    if (budgetId === '') err.push('Must assign to budget.');\n    if (!!err.length) {\n      return window.alert(err.join('\\n'));\n    }\n\n    const newBudgets = budgets.map(budget => {\n      if (budget._id === budgetId) {\n        return {\n          ...budget,\n          transactions: [\n            ...budget.transactions,\n            {\n              _id: uuid(),\n              amount: +amount,\n              createdAt: new Date().toJSON(),\n              note,\n            },\n          ],\n        };\n      }\n      return budget;\n    });\n    await updateData({ budgets: newBudgets });\n    history.push('/dashboard');\n  };\n\n  return (\n    <section className=\"add-transaction\">\n      <div style={{ flex: 1 }}>\n        <h2>Add Transaction</h2>\n        <form>\n          <div className=\"form-item\">\n            <label htmlFor=\"type\">Type:</label>\n            <div\n              className=\"radio-container\"\n              onClick={() => {\n                setType('budget');\n              }}\n            >\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"budget\"\n                checked={type === 'budget'}\n                onChange={e => setType(e.target.value)}\n              />\n              Budget\n            </div>\n            <div\n              className=\"radio-container\"\n              onClick={() => {\n                setType('cash');\n              }}\n            >\n              <input\n                type=\"radio\"\n                name=\"type\"\n                value=\"cash\"\n                checked={type === 'cash'}\n                onChange={e => setType(e.target.value)}\n              />\n              Cash\n            </div>\n          </div>\n\n          {type === 'budget' && (\n            <div className=\"form-item\">\n              <label htmlFor=\"budget-id\">Budget:</label>\n              <select\n                name=\"budget-id\"\n                value={budgetId}\n                onChange={event => {\n                  setBudgetId(event.target.value);\n                }}\n              >\n                {budgets &&\n                  budgets.map(budget => (\n                    <option key={budget._id} value={budget._id}>\n                      {budget.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n          )}\n\n          <div className=\"form-item\">\n            <label htmlFor=\"amount\">Amount:</label>\n            <input\n              type=\"number\"\n              value={amount}\n              onChange={event => setAmount(event.target.value)}\n              autoFocus={isCash || isBudget}\n            />\n          </div>\n\n          {type === 'budget' && (\n            <div className=\"form-item\">\n              <label htmlFor=\"note\">Note:</label>\n              <input\n                type=\"text\"\n                value={note}\n                onChange={event => setNote(event.target.value)}\n              />\n            </div>\n          )}\n        </form>\n      </div>\n      <div className=\"row\" style={{ justifyContent: 'space-between' }}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            history.push('/dashboard');\n          }}\n        >\n          Cancel\n        </button>\n        <button type=\"button\" onClick={handleSubmit}>\n          Add\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default AddTranscation;\n","function commafy(num) {\n  if (num === null || num === undefined) return num;\n  var str = num.toString().split('.');\n  if (str[0].length >= 4) {\n    str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n  }\n  if (str[1] && str[1].length >= 5) {\n    str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n  }\n  return str.join('.');\n}\n\nexport default commafy;\n","import format from 'date-fns/format';\nimport React, { useContext, useEffect, useState } from 'react';\nimport DBContext from '../../context/DBContext';\nimport commafy from '../../utils/commafy';\nimport './Budget.scss';\n\nconst Budget = ({ history, match }) => {\n  const {\n    data: { budgets },\n    updateData,\n  } = useContext(DBContext);\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [frequency, setFrequency] = useState('D');\n  const [found, setFound] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (budgets) {\n      const selectedBudget = budgets.find(\n        budget => budget._id === match.params.id\n      );\n\n      if (selectedBudget) {\n        setName(selectedBudget.name);\n        setAmount(selectedBudget.amount);\n        setFrequency(selectedBudget.frequency);\n        setTransactions(\n          selectedBudget.transactions.reduce((transactionsMap, transaction) => {\n            const formattedDate = format(transaction.createdAt, 'MM/DD/YY');\n            if (!transactionsMap[formattedDate])\n              transactionsMap[formattedDate] = [];\n            transactionsMap[formattedDate].push(transaction);\n\n            return transactionsMap;\n          }, {})\n        );\n\n        setFound(true);\n      } else {\n        setFound(false);\n      }\n    }\n  }, [budgets, match, match.params.id]);\n\n  const handleSubmit = async () => {\n    const err = [];\n    if (name.length === 0) err.push('Must have a name.');\n    const sameBudgetName = budgets.find(\n      budget =>\n        budget.name.toLowerCase() === name.toLowerCase() &&\n        budget._id !== match.params.id\n    );\n    if (sameBudgetName) err.push(`${name} is already taken.`);\n\n    if (amount <= 0) err.push('Budget must be a postive number.');\n\n    if (!!err.length) {\n      window.alert(err.join('\\n'));\n    } else {\n      const newBudgets = budgets.map(budget => {\n        if (budget._id === match.params.id) {\n          return { ...budget, name, amount, frequency };\n        } else return budget;\n      });\n      await updateData({ budgets: newBudgets });\n      window.alert('Saved');\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this budget?')) {\n      const newBudgets = budgets.filter(\n        budget => budget._id !== match.params.id\n      );\n\n      await updateData({ budgets: newBudgets });\n      history.push('/dashboard');\n      window.alert('Budget deleted.');\n    }\n  };\n\n  const handleDeleteTransaction = async transaction => {\n    if (\n      window.confirm(`Are you sure you want to delete this transaction:\n      Date: ${format(transaction.createdAt, 'ddd | MMM DD, YYYY HH:mm')}\n      Note: ${transaction.note || '—'}\n      Amount: ${commafy(transaction.amount)}\n    `)\n    ) {\n      const newBudgets = budgets.map(budget => {\n        if (budget._id === match.params.id) {\n          return {\n            ...budget,\n            transactions: budget.transactions.filter(\n              t => t._id !== transaction._id\n            ),\n          };\n        } else return budget;\n      });\n      await updateData({ budgets: newBudgets });\n      window.alert('Deleted.');\n    }\n  };\n\n  if (found === null) return null;\n\n  if (!found)\n    return (\n      <div>\n        <h2>Budget with id: {match.params.id} does not exist.</h2>\n        <button\n          onClick={() => {\n            history.push('/dashboard');\n          }}\n        >\n          Back\n        </button>\n      </div>\n    );\n\n  return (\n    <section className=\"add-budget\">\n      <div className=\"row\" style={{ justifyContent: 'space-between' }}>\n        <h2>Budget - {name}</h2>\n        <button onClick={() => history.push('/dashboard')}>Back</button>\n      </div>\n\n      <h2>Transactions</h2>\n      <div>\n        {!Object.keys(transactions).length && 'None'}\n        {[...Object.keys(transactions)]\n          .sort((a, b) => {\n            a = new Date(a);\n            b = new Date(b);\n            return a > b ? -1 : a < b ? 1 : 0;\n          })\n          .map(date => (\n            <table key={date} style={{ width: '100%', marginBottom: 10 }}>\n              <thead>\n                <tr>\n                  <th colSpan={3}>\n                    {format(new Date(date), 'ddd | MMM D, YYYY')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {[...transactions[date]]\n                  .sort((a, b) => {\n                    a = new Date(a.createdAt);\n                    b = new Date(b.createdAt);\n                    return a > b ? -1 : a < b ? 1 : 0;\n                  })\n                  .map(transaction => (\n                    <tr\n                      key={transaction._id}\n                      onClick={() => handleDeleteTransaction(transaction)}\n                    >\n                      <td style={{ width: 55, fontSize: '0.75em' }}>\n                        {format(transaction.createdAt, 'HH:mm')}\n                      </td>\n                      <td style={{ fontSize: '0.75em' }}>\n                        {transaction.note || '—'}\n                      </td>\n                      <td\n                        style={{\n                          textAlign: 'right',\n                          padding: '5px 0',\n                          fontSize: '0.75em',\n                        }}\n                      >\n                        {commafy(transaction.amount)}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          ))}\n      </div>\n\n      <h2 style={{ marginTop: 20 }}>Info</h2>\n\n      <form>\n        <div className=\"form-item\">\n          <label htmlFor=\"budget-name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"budget-name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-item\">\n          <label htmlFor=\"budget-amount\">Budget:</label>\n          <input\n            type=\"number\"\n            name=\"budget-amount\"\n            value={amount}\n            onChange={e => setAmount(+e.target.value)}\n          />\n        </div>\n        <div className=\"form-item\">\n          <label htmlFor=\"budget-frequency\">Frequency:</label>\n          <div\n            className=\"radio-container\"\n            onClick={() => {\n              setFrequency('D');\n            }}\n          >\n            <input\n              type=\"radio\"\n              name=\"budget-frequency\"\n              value=\"D\"\n              checked={frequency === 'D'}\n              onChange={e => setFrequency(e.target.value)}\n            />\n            Day\n          </div>\n          <div\n            className=\"radio-container\"\n            onClick={() => {\n              setFrequency('M');\n            }}\n          >\n            <input\n              type=\"radio\"\n              name=\"budget-frequency\"\n              value=\"M\"\n              checked={frequency === 'M'}\n              onChange={e => setFrequency(e.target.value)}\n            />\n            Month\n          </div>\n        </div>\n      </form>\n      <div className=\"row\" style={{ justifyContent: 'space-between' }}>\n        <button type=\"button\" onClick={handleDelete}>\n          Delete\n        </button>\n\n        <button type=\"button\" onClick={handleSubmit}>\n          Edit\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Budget;\n","import classnames from 'classnames';\nimport { getDaysInMonth } from 'date-fns';\nimport React, { useContext, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport DBContext from '../../context/DBContext';\nimport commafy from '../../utils/commafy';\nimport './Dashboard.scss';\n\nconst Dashboard = ({ history }) => {\n  const {\n    data: { budgets, savings },\n    totalCash,\n    extraBudget,\n    updateData,\n  } = useContext(DBContext);\n\n  const { expenditures } = useMemo(() => {\n    let expenditures = -savings;\n    if (budgets) {\n      const daysInMonth = getDaysInMonth(new Date());\n\n      for (const budget of budgets) {\n        if (budget.frequency === 'D') {\n          expenditures -= budget.amount;\n          expenditures -= budget.amount * daysInMonth;\n        } else {\n          expenditures -= budget.amount;\n        }\n      }\n    }\n\n    return { expenditures };\n  }, [budgets, savings]);\n\n  function updateSavings() {\n    const newSavings = window.prompt('Savings:');\n    if (newSavings !== null) updateData({ savings: newSavings });\n  }\n\n  if (!budgets) return null;\n\n  return (\n    <>\n      <section className=\"dashboard\">\n        <div style={{ flex: 1 }}>\n          <div className=\"row\" style={{ justifyContent: 'space-between' }}>\n            <h2>Budgets</h2>\n            <div>\n              <span>Cash: </span>\n              <Link\n                to={{\n                  pathname: '/add-transaction',\n                  state: { transaction: 'cash' },\n                }}\n                className={classnames('budget-extra', {\n                  positive: totalCash > 0,\n                  negative: totalCash < 0,\n                })}\n              >\n                {totalCash > 0 && '+'}\n                {commafy(totalCash)}\n              </Link>\n            </div>\n          </div>\n          <table className=\"budget-table\">\n            <tbody>\n              {budgets.map(budget => (\n                <tr key={budget._id}>\n                  <td style={{ padding: '5px 0' }}>\n                    <Link className=\"budget-name\" to={`/budget/${budget._id}`}>\n                      {budget.name}\n                    </Link>\n                  </td>\n                  <td style={{ textAlign: 'right' }}>\n                    <Link\n                      to={{\n                        pathname: '/add-transaction',\n                        state: { transaction: budget._id },\n                      }}\n                      className={classnames('budget-extra', {\n                        positive: extraBudget[budget._id] > 0,\n                        negative: extraBudget[budget._id] < 0,\n                      })}\n                    >\n                      {extraBudget[budget._id] > 0 && '+'}\n                      {commafy(extraBudget[budget._id])}\n                    </Link>\n                  </td>\n                  <td className=\"budget-amount\">\n                    {commafy(budget.amount)}/{budget.frequency}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          <table className=\"budget-table\" style={{ marginTop: 20 }}>\n            <tbody>\n              <tr>\n                <td colSpan={2}>\n                  <div\n                    style={{ textDecoration: 'underline' }}\n                    onClick={updateSavings}\n                  >\n                    Savings\n                  </div>\n                </td>\n                <td className=\"budget-amount\">{commafy(savings)}/M</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table style={{ textAlign: 'right', float: 'right', marginTop: 40 }}>\n            <tbody>\n              <tr>\n                <td>Expenditures:</td>\n                <td>\n                  <span\n                    className={classnames('budget-extra', {\n                      positive: expenditures > 0,\n                      negative: expenditures < 0,\n                    })}\n                    style={{ marginLeft: 10 }}\n                  >\n                    {expenditures > 0 && '+'}\n                    {commafy(expenditures)}\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"row\" style={{ justifyContent: 'space-between' }}>\n          <button\n            onClick={() => {\n              history.push('/add-transaction');\n            }}\n          >\n            Add Transaction\n          </button>\n          <button\n            onClick={() => {\n              history.push('/add-budget');\n            }}\n          >\n            Add Budget\n          </button>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport AddBudget from './pages/AddBudget';\nimport AddTranscation from './pages/AddTransaction';\nimport Budget from './pages/Budget';\nimport Dashboard from './pages/Dashboard';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/budget/:id\" component={Budget} />\n        <Route exact path=\"/add-budget\" component={AddBudget} />\n        <Route exact path=\"/add-transaction\" component={AddTranscation} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { DBProvider } from './context/DBContext';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <DBProvider>\n    <App />\n  </DBProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}